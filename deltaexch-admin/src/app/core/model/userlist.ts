class FormatData {
  auto_limit: string;
  child_count: number;
  child_total_balance: number;
  close_account: string;
  confirm_password: string;
  created_at: string;
  credit_referance: number;
  cricket_commission: number;
  cricket_delay: number;
  cricket_max_bet: number;
  cricket_min_bet: number
  cricket_partnership: number;
  flat_share: string;
  free_chip: number;
  id: number;
  impersonate_password: string;
  is_change_password: string;
  liability: number;
  liability_limit: number;
  lock_betting: string;
  lock_fancy_bet: string;
  lock_user: string;
  master_password: string;
  match_commission: number;
  match_delay: number;
  mobile: string;
  name: string;
  new_password: string;
  old_password: string;
  parent_close_account: string;
  parent_id: number
  parent_lock_betting: string;
  parent_lock_fancy_bet: string;
  parent_lock_user: string;
  parent_user_type_id: number;
  partnership: number;
  password: string;
  profit_loss: number;
  rate_difference: number;
  reference: string;
  remark: string;
  search: string;
  self_close_account: string;
  self_lock_betting: string;
  self_lock_fancy_bet: string;
  self_lock_user: string;
  session_commission: number;
  session_commission_type: string;
  session_delay: number;
  soccer_commission: number;
  soccer_delay: number;
  soccer_max_bet: number;
  soccer_min_bet: number;
  soccer_partnership: number;
  status: string;
  tennis_commission: number;
  tennis_delay: number;
  tennis_max_bet: number;
  tennis_min_bet: number;
  tennis_partnership: number;
  total_balance: number;
  total_chip: number;
  total_settled_amount: number;
  updated_at: string;
  user_name: string;
  user_type_id: number
}
class Data{
  data: Array<FormatData>;
  data_sum: Object;
  tmp_super_parent_id: number;
}
export class UserList {
  data: Data;
  errors?: "";
  message: string;
  status: boolean;
}
